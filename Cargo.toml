[package]
edition = "2021"
name = "w55rp20_tcp_server_example"
version = "0.1.0"
rust-version = "1.81"

[dependencies]
# embassy (2024-09-10 latest commit id : 0ef06cc19b61c8196fea941514ec313a0f15d145)
embassy-sync = { version = "0.6.0", git = "https://github.com/embassy-rs/embassy", rev = "0ef06cc19b61c8196fea941514ec313a0f15d145", features = [
    "defmt",
] }
embassy-executor = { version = "0.6.0", git = "https://github.com/embassy-rs/embassy", rev = "0ef06cc19b61c8196fea941514ec313a0f15d145", features = [
    "task-arena-size-98304",
    "arch-cortex-m",
    "executor-thread",
    "executor-interrupt",
    "defmt",
    "integrated-timers",
] }

embassy-time = { version = "0.3", git = "https://github.com/embassy-rs/embassy", rev = "0ef06cc19b61c8196fea941514ec313a0f15d145", features = [
    "defmt",
    "defmt-timestamp-uptime",
] }
embassy-rp = { version = "0.2", git = "https://github.com/embassy-rs/embassy", rev = "0ef06cc19b61c8196fea941514ec313a0f15d145", features = [
    "unstable-pac",
    "time-driver",
    "critical-section-impl",
    "rp2040",
] }
embassy-usb = { version = "0.3", git = "https://github.com/embassy-rs/embassy", rev = "0ef06cc19b61c8196fea941514ec313a0f15d145", features = [
    "defmt",
] }
embassy-net = { version = "0.4.0", git = "https://github.com/embassy-rs/embassy", rev = "0ef06cc19b61c8196fea941514ec313a0f15d145", features = [
    "defmt",
    "tcp",
    "udp",
    "raw",
    "dhcpv4",
    "medium-ethernet",
    "dns",
] }
embassy-net-wiznet = { version = "0.1.0", git = "https://github.com/embassy-rs/embassy", rev = "0ef06cc19b61c8196fea941514ec313a0f15d145", features = [
    "defmt",
] }
embassy-futures = { version = "0.1.0", git = "https://github.com/embassy-rs/embassy", rev = "0ef06cc19b61c8196fea941514ec313a0f15d145" }
embassy-usb-logger = { version = "0.2.0", git = "https://github.com/embassy-rs/embassy", rev = "0ef06cc19b61c8196fea941514ec313a0f15d145" }
embedded-hal-1 = { package = "embedded-hal", version = "1.0" }
embedded-hal-async = "1.0"
embedded-hal-bus = { version = "0.1", features = ["async"] }
embedded-io-async = { version = "0.6.1", features = [] }
embedded-storage = { version = "0.3" }

defmt = "0.3"
defmt-rtt = "0.4"
fixed = "1.23.1"
fixed-macro = "1.2"

cortex-m = { version = "0.7.6", features = ["inline-asm"] }
cortex-m-rt = "0.7.0"
panic-probe = { version = "0.3", features = ["print-defmt"] }
futures = { version = "0.3.17", default-features = false, features = [
    "async-await",
    "cfg-target-has-atomic",
    "unstable",
] }
byte-slice-cast = { version = "1.2.0", default-features = false }
static_cell = "2"
portable-atomic = { version = "1.5", features = ["critical-section"] }
log = "0.4"
pio-proc = "0.2"
pio = "0.2.1"
rand = { version = "0.8.5", default-features = false }

embedded-nal-async = { version = "0.7.1", features = ["ip_in_core"] }


zerocopy = "0.7.35"
zerocopy-derive = "0.7.35"
heapless = "0.8.0"

[features]
default = ["w5500"]
w5500 = []
w5100s = []

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = true
opt-level = 0
overflow-checks = true

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
overflow-checks = false

# do not optimize proc-macro crates = faster builds from scratch
[profile.dev.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

[profile.release.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3

[patch.crates-io]
pio = { git = "https://github.com/rp-rs/pio-rs.git" }
